- type: replace
  path: /instance_groups/-
  value:
    name: iso-router
    azs:
    - z1
    - z2
    instances: 1
    vm_type: minimal
    vm_extensions:
    - ssh-proxy-and-router-lb 
    stemcell: default
    update:
      max_in_flight: 1
      serial: true
    networks:
    - name: default
    jobs:
    - name: consul_agent
      release: consul
      consumes:
       consul_common: {from: consul_common_link}
       consul_server: nil
       consul_client: {from: consul_client_link}
      properties:
       consul:
         agent:
           services:
             gorouter: {}
    - name: gorouter
      release: routing
      properties:
       router:
         isolation_segments: [is1]
         routing_table_sharding_mode: segments
         ssl_skip_validation: true
         enable_ssl: true
         tls_pem:
         - cert_chain: "((router_ssl.certificate))"
           private_key: "((router_ssl.private_key))"
         status:
           password: "((router_status_password))"
           user: router-status
         route_services_secret: "((router_route_services_secret))"
         tracing:
           enable_zipkin: true
       routing_api:
         enabled: true
       uaa:
         clients:
           gorouter:
             secret: "((uaa_clients_gorouter_secret))"
         ca_cert: "((uaa_ssl.ca))"
         ssl:
           port: 8443
    - name: metron_agent
      release: loggregator
      properties: &metron_agent_properties 
        metron_endpoint:
          shared_secret: "((dropsonde_shared_secret))"
        loggregator:
          tls:
            ca_cert: "((loggregator_tls_metron.ca))"
            metron:
              cert: "((loggregator_tls_metron.certificate))"
              key: "((loggregator_tls_metron.private_key))"
- type: replace
  path: /instance_groups/-
  value:
    name: iso-diego-cell
    azs:
    - z1
    - z2
    instances: 1
    vm_type: small-highmem
    vm_extensions:
    - 100GB_ephemeral_disk
    stemcell: default
    networks:
    - name: default
    jobs:
    - name: consul_agent
      release: consul
      consumes:
        consul_common: {from: consul_common_link}
        consul_server: nil
        consul_client: {from: consul_client_link}
      properties:
        consul:
          agent:
            node_name_includes_id: true
    - name: cflinuxfs2-rootfs-setup
      release: cflinuxfs2
    - name: garden
      release: garden-runc
      properties:
        garden:
          cleanup_process_dirs_on_wait: true
          debug_listen_address: 127.0.0.1:17019
          default_container_grace_time: 0
          destroy_containers_on_start: true
          graph_cleanup_threshold_in_mb: 0
          deny_networks:
          - 0.0.0.0/0
          persistent_image_list:
          - "/var/vcap/packages/cflinuxfs2/rootfs"
          network_plugin: /var/vcap/packages/runc-cni/bin/garden-external-networker
          network_plugin_extra_args:
          - --configFile=/var/vcap/jobs/garden-cni/config/adapter.json
    - name: rep
      release: diego
      properties:
        diego:
          rep:
            placement_tags: [is1]
            bbs: &diego_bbs_client_properties
              ca_cert: "((diego_bbs_client.ca))"
              client_cert: "((diego_bbs_client.certificate))"
              client_key: "((diego_bbs_client.private_key))"
            preloaded_rootfses:
            - cflinuxfs2:/var/vcap/packages/cflinuxfs2/rootfs
            require_tls: true
            ca_cert: "((diego_rep_agent.ca))"
            server_cert: "((diego_rep_agent.certificate))"
            server_key: "((diego_rep_agent.private_key))"
            enable_legacy_api_endpoints: false
            locket:
              api_location: "locket.service.cf.internal:8891"
        loggregator: &diego_loggregator_client_properties
          use_v2_api: true
          ca_cert: "((loggregator_tls_metron.ca))"
          cert: "((loggregator_tls_metron.certificate))"
          key: "((loggregator_tls_metron.private_key))"
        tls:
          ca_cert: "((diego_rep_agent.ca))"
          cert: "((diego_rep_agent.certificate))"
          key: "((diego_rep_agent.private_key))"
    - name: metron_agent
      release: loggregator
      properties: *metron_agent_properties
    - name: cfdot
      release: diego
      properties:
        diego:
          cfdot:
            bbs: *diego_bbs_client_properties
    - name: route_emitter
      release: diego
      properties:
        loggregator: *diego_loggregator_client_properties
        diego:
          route_emitter:
            local_mode: true
            bbs:
              ca_cert: "((diego_bbs_client.ca))"
              client_cert: "((diego_bbs_client.certificate))"
              client_key: "((diego_bbs_client.private_key))"
        tcp:
          enabled: true
        uaa:
          ca_cert: "((uaa_ca.certificate))"
          client_secret: "((uaa_clients_tcp_emitter_secret))"
    - name: garden-cni
      release: cf-networking
    - name: netmon
      release: cf-networking
    - name: vxlan-policy-agent
      release: cf-networking
      properties:
        cf_networking:
          vxlan_policy_agent:
            ca_cert: ((network_policy_client.ca))
            client_cert: ((network_policy_client.certificate))
            client_key: ((network_policy_client.private_key))
    - name: silk-daemon
      release: cf-networking
      properties:
        cf_networking:
          silk_daemon:
            ca_cert: ((silk_daemon.ca))
            client_cert: ((silk_daemon.certificate))
            client_key: ((silk_daemon.private_key))
    - name: cni
      release: cf-networking

- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/provides?/gorouter
  value:
    as: router_primary

- type: replace
  path: /instance_groups/name=uaa/jobs/name=uaa/consumes?/router
  value:
    from: router_primary
